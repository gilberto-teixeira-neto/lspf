To install:
===========

Manually:
---------
1)  Customise lspf.h  Make sure paths ZSPROF, ZUPROF, MLIB etc exist.
    Install:  sudo apt-get install libboost-all-dev
2)  Compile and run setup.cpp to create the default ISPSPROF profile member, ISPCMDS and USRCMDS command tables.
3)  Compile lspf.cpp
4)  Compile applications
5)  Copy directories mlib, plib and tlib to the paths defined in MLIB, PLIB and TLIB in lspf.h if different.
    If using keylists, make sure key table file ISRKEYP in the tlib/ directory is in the ZUPROF directory (usually ~/.lspf/)
    or run rexx keygen to create it.

You can use comp1 to compile lspf.cpp, compsetup to compile setup.cpp and compapps for all applications in directory Apps.
This has been developed on Arch Linux - link options may vary (eg. if ncurses is built with --with-termlib add -ltinfo )


Docker:
-------
There is a docker build in directory tools/docker kindly provided by Rene Jansen.
This will download and install both ooRexx and lspf.


Boost and ncurses required to compile lspf.cpp.

Environmental variables HOME and LOGNAME are required to be setup.  lspf will fail to start without them.
SHELL is also used, but not a requirement.  .SHELL command will not work if this variable is not set.

OOREXX required for POREXX1.cpp (OOREXX interface module for writing lspf applications in REXX) and PEDRXM1.cpp (edit
macro interface module for writing edit macros in REXX).

file required for PBRO01A.cpp as it is linked with -lmagic.
grep required for PFLST0A.cpp for the SRCHFOR command.

Run lspf in a terminal.

Works with:
linux 5.5.4
gcc 9.2.1
ncurses 6.2
boost 1.72.0


On upgrade:
-----------

Recompile application programs in case header files have changed (use applications that come with that
version of lspf).

Recompile and rerun setup in case variables have been added to the ISPS profile.  You will get segfaults
if required variables are missing.
